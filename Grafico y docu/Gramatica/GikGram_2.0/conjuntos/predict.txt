/*
 * predict.txt
 *
 * Formato:
 * 	no-terminal terminal [ ...terminal]
 *
 * 2019/04/28 22:34:32
 *
 * Archivo generado por GikGram 2.0
 *
 * Copyright © Olminsky 2011 Derechos reservados
 * Reproducción sin fines de lucro permitida
 */

<S> nomen 
<Titulo> nomen 
<SecConst> perpetuus 
<SecConst> firmamentum 
<DeclConsts> ID 
<DeclConsts> furibundus firmamentum 
<Constante> ID 
<InicioConst> ID 
<Valor> veridicus falsidicus literalEntero literalCaracter literalString literalFraccion literalFecha 
<Valor> { 
<Valor> <- 
<Valor> ID 
<Literal> veridicus falsidicus 
<Literal> literalEntero 
<Literal> literalCaracter 
<Literal> literalString 
<Literal> literalFraccion 
<Literal> literalFecha 
<LiteralBool> veridicus 
<LiteralBool> falsidicus 
<Arreglo> { 
<Registro> <- 
<Elementos> veridicus falsidicus literalEntero literalCaracter literalString literalFraccion literalFecha { <- ID 
<Elementos> } -> 
<MasElementos> , 
<MasElementos> } -> 
<SecTipos> furibundus 
<SecTipos> firmamentum 
<DeclTipos> ID 
<DeclTipos> commutabilis firmamentum 
<InicioTipo> ID 
<Tipo> ID 
<Tipo> numerus imago catena dualis liber fractio diem 
<Tipo> coniugo 
<Tipo> ordo 
<Atomico> numerus 
<Atomico> imago 
<Atomico> catena 
<Atomico> dualis 
<Atomico> liber 
<Atomico> fractio 
<Atomico> diem 
<TipoRegistro> coniugo 
<CierreRegistro> dixi 
<Espacio> numerus imago catena dualis liber fractio diem 
<CierreEspacio> ID 
<MasEspacio> numerus imago catena dualis liber fractio diem 
<MasEspacio> dixi 
<InicioArreglo> ordo 
<Dimension> [ 
<CierreDimension> literalEntero 
<MasDimension> [ 
<MasDimension> autem 
<TipoArreglo> numerus imago catena dualis liber fractio diem 
<TipoArreglo> coniugo 
<SecVars> commutabilis 
<SecVars> firmamentum 
<DeclVars> ID numerus imago catena dualis liber fractio diem coniugo ordo 
<DeclVars> exemplar initum firmamentum 
<Variable> ID numerus imago catena dualis liber fractio diem coniugo ordo 
<CierreVariable> est 
<MasVariables> , 
<MasVariables> . 
<SecProts> exemplar 
<SecProts> firmamentum 
<DeclPrototipos> directus efficio 
<DeclPrototipos> corpus firmamentum 
<Prototipo> directus 
<Prototipo> efficio 
<EncabProc> directus 
<EncabFunc> efficio 
<CierreEncabFunc> : 
<InicioParams> ID 
<InicioParams> . : 
<Parametros> ign ID numerus imago catena dualis liber fractio diem coniugo ordo 
<Parametros> ) . : 
<DefParam> ign ID numerus imago catena dualis liber fractio diem coniugo ordo 
<Ign> ign 
<Ign> ID numerus imago catena dualis liber fractio diem coniugo ordo 
<MasParams> , 
<MasParams> . 
<MasParams> ) 
<TipoRet> numerus imago catena dualis liber fractio diem 
<TipoRet> coniugo 
<TipoRet> ordo 
<SecRutinas> corpus 
<SecRutinas> firmamentum 
<DeclRutinas> directus efficio 
<DeclRutinas> firmamentum 
<Rutina> directus 
<Rutina> efficio 
<Commutabilis> commutabilis 
<Commutabilis> initum 
<Cuerpo> initum 
<Instrucciones> tempus in aeger itero panis sigla neco pergo claudeo reditus ( literalEntero incrementum decrementum literalFraccion || |^ ID . 
<Instrucciones> finis 
<Instrucción> tempus 
<Instrucción> in 
<Instrucción> aeger 
<Instrucción> itero 
<Instrucción> panis 
<Instrucción> sigla 
<Instrucción> neco pergo claudeo reditus ( literalEntero incrementum decrementum literalFraccion || |^ ID . 
<Instr1Linea> neco 
<Instr1Linea> pergo 
<Instr1Linea> claudeo 
<Instr1Linea> reditus 
<Instr1Linea> ( literalEntero incrementum decrementum literalFraccion || |^ 
<Instr1Linea> . 
<Instr1Linea> ID 
<CoheOExpr> impono 
<CoheOExpr> . 
<While> tempus 
<CierreWhile> opus 
<Codigo> neco pergo claudeo reditus ( literalEntero incrementum decrementum literalFraccion || |^ ID . 
<Codigo> initum 
<If> in 
<ThenElse> certus 
<ThenElse> mentiri 
<ThenElse> . 
<Else> mentiri 
<Else> . 
<Then> certus 
<Then> . 
<Switch> aeger 
<CierreSwitch> initum 
<Casos> casus 
<Casos> detrimentum 
<Casos> finis 
<Caso> casus 
<Default> detrimentum 
<CasosDefault> . 
<CasoDefault> casus 
<CasoDefault> finis 
<RepeatUntil> itero 
<CierreRepeatU> usque 
<For> panis 
<ForAux> := 
<ForAux2> auctum 
<ForAux3> gradus 
<ForAux4> opus 
<With> sigla 
<WithAux> opus 
<WithAux2> dixi 
<Break> neco 
<Continues> pergo 
<Halt> claudeo 
<Return> reditus 
<Cohercion> impono 
<Nula> . 
<Asignacion> ID 
<Asignador> := 
<Asignador> += 
<Asignador> -= 
<Asignador> *= 
<Asignador> /= 
<Asignador> %= 
<Asignador> |+= 
<Asignador> |-= 
<Asignador> |*= 
<Asignador> |/= 
<Asignador> et= 
<Asignador> aut= 
<Asignador> xaut= 
<Expresion> ( literalEntero incrementum decrementum 
<Expresion> ( literalFraccion || |^ 
<Aritmetica> ( literalEntero incrementum decrementum 
<Nivel2> ( literalEntero 
<Nivel2> ( literalEntero incrementum decrementum 
<Nivel1> ( literalEntero 
<Nivel1> incrementum decrementum ( literalEntero 
<Nivel0> incrementum decrementum 
<Nivel0> ( literalEntero 
<ValorEntero> ( 
<ValorEntero> literalEntero 
<OpBinaria2> + 
<OpBinaria2> - 
<OpBinaria1> * 
<OpBinaria1> / 
<OpBinaria1> % 
<OpUnaria> incrementum 
<OpUnaria> decrementum 
<AritmeticaFrac> ( literalFraccion || |^ 
<Nivel2Frac> ( literalFraccion 
<Nivel2Frac> ( literalFraccion || |^ 
<Nivel1Frac> ( literalFraccion 
<Nivel1Frac> || |^ ( literalFraccion 
<Nivel0Frac> || |^ 
<Nivel0Frac> ( literalFraccion 
<ValorFrac> ( 
<ValorFrac> literalFraccion 
<OpBinaria2Frac> |+ 
<OpBinaria2Frac> |- 
<OpBinaria1Frac> |* 
<OpBinaria1Frac> |/ 
<OpUnariaFrac> || 
<OpUnariaFrac> |^ 
<Entrada> firmamentum 
